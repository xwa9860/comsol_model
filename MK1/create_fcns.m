model.func.create('pw3', 'Piecewise');
model.func.create('rm1', 'Ramp');
model.func.create('an1', 'Analytic');
model.func.create('an3', 'Analytic');
model.func.create('an4', 'Analytic');
model.func.create('an5', 'Analytic');
model.func.create('an6', 'Analytic');
model.func.create('an9', 'Analytic');
model.func('pw3').active(false);
model.func('pw3').label('Outer Reflector Radius');
model.func('pw3').set('pieces', {'0' '1.5' '1.6';  ...
'1.5' '2.8656' '1.60+(2.40-1.60)*(z-1.5)/(2.8656-1.5)';  ...
'2.8656' '5.8656' '2.40';  ...
'5.8656' '7.0356' '2.40-(2.40-1.20)*(z-5.8656)/(7.0356-5.8656)';  ...
'7.0356' '8.5656' '1.20'});
model.func('pw3').set('arg', 'z');
model.func('pw3').set('funcname', 'OR');
model.func('rm1').set('funcname', 'Orif');
model.func('rm1').set('smoothloc', true);
model.func('rm1').set('location', '5.8656-Hinlet');
model.func('rm1').set('slope', '-1/(7.0356-5.8656-Hinlet)');
model.func('rm1').set('smoothcutoff', true);
model.func('rm1').set('cutoffactive', true);
model.func('an1').label('Density');
model.func('an1').set('args', {'T'});
model.func('an1').set('argunit', 'K');
model.func('an1').set('expr', '-0.49*(T-273.15)+2281.63');
model.func('an1').set('plotargs', {'T' '0' '2000'});
model.func('an1').set('funcname', 'rhoLf');
model.func('an1').set('fununit', 'kg/m^3');
model.func('an3').label('FLiBe Thermal Conductivity');
model.func('an3').set('args', {'T'});
model.func('an3').set('argunit', 'K');
model.func('an3').set('expr', '0.7662+(0.0005*(T-273.15))');
model.func('an3').set('plotargs', {'T' '600' '800'});
model.func('an3').set('funcname', 'kLt');
model.func('an3').set('fununit', 'W/(m*K)');
model.func('an4').label('FLiBe Density');
model.func('an4').set('args', {'T'});
model.func('an4').set('argunit', 'K');
model.func('an4').set('expr', '2282-0.49*(T-273.15)');
model.func('an4').set('plotargs', {'T' '600' '800'});
model.func('an4').set('funcname', 'rhoLt');
model.func('an4').set('fununit', 'kg/m^3');
model.func('an5').label('FLiBe Heat Capacity');
model.func('an5').set('args', {'T'});
model.func('an5').set('argunit', 'K');
model.func('an5').set('expr', '2415.78');
model.func('an5').set('plotargs', {'T' '600' '800'});
model.func('an5').set('funcname', 'CpLt');
model.func('an5').set('fununit', 'J/(kg*K)');
model.func('an6').label('FLiBe Dynamic Viscosity');
model.func('an6').set('args', {'T'});
model.func('an6').set('argunit', 'K');
model.func('an6').set('expr', '((4.638)*10^5)/((T-273.15)^2.79)');
model.func('an6').set('plotargs', {'T' '600' '800'});
model.func('an6').set('funcname', 'muLt');
model.func('an6').set('fununit', 'Pa*s');
model.func('an9').label('Inlet Velocity');
model.func('an9').set('args', {'z' 'z0'});
model.func('an9').set('expr', '(1-bottomInletFraction)/0.54*0.06*(z^2 - z0)');
model.func('an9').set('plotargs', {'z' '0' '1'; 'z0' '0' '1'});
model.func('an9').set('funcname', 'vel_in');